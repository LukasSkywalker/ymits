<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MusicBird.SearchResultsPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MusicBird"
    xmlns:common="using:MusicBird.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:ExtensionType="Search">

    <Page.Resources>
        <CollectionViewSource x:Name="resultsViewSource" Source="{Binding Results}"/>
        <CollectionViewSource x:Name="filtersViewSource" Source="{Binding Filters}"/>
        <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!-- TODO: Update the following string to be the name of your app -->
        <x:String x:Key="AppName">MusicBird</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines three rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
        * Row 2 contains the player
    
        _____________________________________
        |<- MusicBird                       |
        |___________________________________|
        | (filters)                         |
        |                                   |
        | [RESULTS]                         |
        |___________________________________|
        | Player                            |
    
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="resultsPanel" Grid.Row="1" Margin="12,12,12,12">
        <!--
            The body of the page in most view states uses an items controls to create multiple radio buttons
            for filtering above a horizontal scrolling grid of search results
        -->
            <Grid x:Name="typicalPanel">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" x:Name="typicalFiltersPanel">
                    <ItemsControl
                    x:Name="typicalFilters"
                    Canvas.ZIndex="1"
                    ItemsSource="{Binding Source={StaticResource filtersViewSource}}"
                    Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Margin="120,-3,120,30">


                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <RadioButton
                                GroupName="Filters"
                                IsChecked="{Binding Active, Mode=TwoWay}"
                                Checked="Filter_Checked"
                                Style="{StaticResource TextRadioButtonStyle}">
                                    <TextBlock Text="{Binding Description}"  Margin="3,-7,3,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                </RadioButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Visibility="Collapsed" x:Name="snappedFiltersPanel">
                    <ComboBox
                    x:Name="snappedFilters"
                    ItemsSource="{Binding Source={StaticResource filtersViewSource}}"
                    Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Margin="20,0,20,20"
                    SelectionChanged="Filter_SelectionChanged"
                    HorizontalAlignment="Left"/>
                </StackPanel>

                <ListView
                    x:Name="resultsListView"
                    AutomationProperties.AutomationId="ResultsListView"
                    AutomationProperties.Name="Search Results"
                    TabIndex="1"
                    Grid.Row="1"
                    Margin="0,0,0,0"
                    Padding="10,10,10,60"
                    SelectionMode="None"
                    IsSwipeEnabled="false"
                    IsItemClickEnabled="True"
                    ItemsSource="{Binding Source={StaticResource resultsViewSource}}"
                    >
                    <!--ItemTemplate="{StaticResource StandardSmallIcon70ItemTemplate}"-->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="Control">
                            <Setter Property="Height" Value="95"/>
                            <Setter Property="Margin" Value="0,0,18,8"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="10,0,0,0" Height="100">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Margin="0,0,20,10" Style="{StaticResource PlayButtonStyle}" Click="playButton_Click" Tag=" " VerticalAlignment="Center"/>
                                <!--<StackPanel Orientation="Horizontal" Height="80" Margin="20,0,0,0">-->

                                <StackPanel Grid.Column="1" Width="900" Tapped="OnItemTapped" HorizontalAlignment="Stretch" RightTapped="OnItemRightTapped">
                                    <TextBlock Text="{Binding artist}"
                               Foreground="#FFC8AB14" FontSize="28" />
                                    <TextBlock Text="{Binding title}"
                               TextWrapping="Wrap" FontSize="24" />
                                </StackPanel>
                                <!--<Button Grid.Column="2" Style="{StaticResource DownloadButtonStyle}" Click="downloadButton_Click" Tag=" " HorizontalAlignment="Right"/>-->
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>

        <!--
        This grid acts as a player panel for the bottom of the page that defines three rows:
        * Row 0 contains the top border of the panel
        * Row 1 contains the play/stop buttons and volume slider
        * Row 2 contains the progress meter
        
         _______________________________________
        | (Play)(Stop) |Volume|                 |
        | 0:00 ################>            0:00|
        
        -->

        <Grid x:Name="playerPanel" Grid.Row="2" Margin="12,0,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border BorderThickness="0,2,0,0" BorderBrush="Gainsboro" Margin="0,0,0,10" Grid.Row="0"/>
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <Button x:Name="btnPlay" Click="btnPlay_Click" 
        	Style="{StaticResource PlayButtonStyle}" Margin="0,0,0,-1"/>
                <Button x:Name="btnStop" Click="btnStop_Click"
            Style="{StaticResource StopButtonStyle}"/>
                <!--<Button x:Name="btnReverse" Click="btnReverse_Click" Content="Rewind"/>
                <Button x:Name="btnForward" Click="btnForward_Click" Content="Forward"/>
                <Button x:Name="btnMute" Click="btnMute_Click" Content="Mute" />-->
                <Slider x:Name="volumeSlider" Width="45" Orientation="Vertical" ValueChanged="volume_ValueChanged" Maximum="10" StepFrequency="1"/>
                <TextBlock x:Name="downloadStatusTextBlock" Width="100"/>
                <MediaElement x:Name="playerElement" Width="100" AudioCategory="BackgroundCapableMedia"
                            CurrentStateChanged="mediaElement_CurrentStateChanged" MediaEnded="mediaElement_MediaEnded"
                            MediaFailed="mediaElement_MediaFailed" MediaOpened="mediaElement_MediaOpened"
                            DownloadProgressChanged="mediaElement_DownloadProgressChanged"/>
            </StackPanel>

            <!--
            This grid acts as the progress panel that defines three columns:
            * Column 0 contains the current time
            * Column 1 contains the progress indicator
            * Column 2 contains the total time
            
            |00:00| |################I>        | |03:12|
            
            -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="currentTimeTextBlock" Grid.Column="0" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="00:00" VerticalAlignment="Center" Margin="0,5,10,0"/>
                <Slider x:Name="progressSlider" Grid.Column="1" ValueChanged="slider_ValueChanged" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,0,-20"/>
                <TextBlock x:Name="totalTimeTextBlock" Grid.Column="2" HorizontalAlignment="Right" TextWrapping="Wrap" Text="00:00" VerticalAlignment="Center" Margin="10,5,0,0"/>
            </Grid>
        </Grid>

        <!-- Back button, page title and subtitles-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"  />
            <TextBlock x:Name="resultText" Grid.Column="2" Text="Results for&#x00a0;" IsHitTestVisible="false" Style="{StaticResource PageSubheaderTextStyle}"/>
            <TextBlock x:Name="queryText" Grid.Column="3" Text="{Binding QueryText}" IsHitTestVisible="false" Style="{StaticResource PageSubheaderTextStyle}"/>
        </Grid>

        <TextBlock
            x:Name="noResultsTextBlock"
            Grid.Row="1"
            Margin="120,50,0,0"
            Visibility="Collapsed"
            Style="{StaticResource SubheaderTextStyle}"
            Text="No results match your search." />

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="typicalFilters" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="100,-3,90,30"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="100,50,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped in addition to more extensive changes:
                    * The query text becomes the page header
                    * A different representation for filter selection and search results is used
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="queryText" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="resultText" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="typicalFiltersPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedFiltersPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="20,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaselineTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name = "ResultStates">
                <VisualState x:Name="ResultsFound" />
                <!-- When there are no results, the results panel is replaced with an informational TextBlock -->
                <VisualState x:Name="NoResultsFound">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="resultsPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>						
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
